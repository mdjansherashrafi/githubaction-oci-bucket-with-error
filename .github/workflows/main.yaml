name: Upload Large Files to OCI

on:
  workflow_dispatch:
  push:
    branches: [master]

env:
  OCI_REGION: 'me-riyadh-1'  # Replace with your OCI region
  OCI_NAMESPACE: 'axjejvuhn1me'  # Replace with your OCI namespace
  OCI_BUCKET: 'githubaction-demo-1'  # Your OCI bucket name
  MULTIPART_THRESHOLD: '52428800'  # 50MB threshold
  OCI_CLI_SUPPRESS_FILE_PERMISSIONS_WARNING: 'True'  # Suppress permissions warning

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install Python and OCI CLI
      - name: Install Python and pip
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          
      - name: Install OCI CLI via pip (recommended)
        run: |
          python3 -m pip install oci-cli --upgrade
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          oci --version

      # Configure OCI credentials (with secrets from GitHub)
      - name: Configure OCI Credentials
        run: |
          mkdir -p ~/.oci
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${{ secrets.OCI_USER_OCID }}
          fingerprint=${{ secrets.OCI_FINGERPRINT }}
          tenancy=${{ secrets.OCI_TENANCY_OCID }}
          region=${{ env.OCI_REGION }}
          key_file=~/.oci/oci_api_key.pem
          pass_phrase=${{ secrets.OCI_KEY_PASSPHRASE }}
          EOF
          
          cat > ~/.oci/oci_api_key.pem <<EOF
          ${{ secrets.OCI_PRIVATE_KEY }}
          EOF
          
          chmod 600 ~/.oci/oci_api_key.pem ~/.oci/config

      # Verify authentication by listing namespaces
      - name: Verify Authentication
        run: |
          date  # Check clock sync
          oci os ns get  # Test OCI access

      # --- Simulate the Empty File Upload to Trigger Content-Length Error ---
      - name: Simulate Empty File Upload to Trigger Content-Length Error
        run: |
         echo "Simulating empty file upload to trigger Content-Length error."
    
      # Ensure the directory exists
      mkdir -p large-files
    
      # Create an empty file
          touch large-files/empty-file.mp4
    
      # Check if file is created
    if [ ! -f "large-files/empty-file.mp4" ]; then
      echo "File not found!"
      exit 1
    fi
    
    # Now we will upload the empty file, omitting the Content-Length option
    echo "Uploading the empty file without Content-Length header"
    
    # Attempt to upload the empty file to simulate the MissingContentLength error
    oci os object put \
      --namespace $OCI_NAMESPACE \
      --bucket-name $OCI_BUCKET \
      --file large-files/empty-file.mp4 \
      --name empty-file.mp4 \
      --force

    echo "File uploaded (or failed) to OCI bucket"

